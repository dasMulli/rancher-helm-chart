# Default values for infra.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

portal:
    image:
      repositoryBase: nexus.syn-group.com
      tag: develop
      pullPolicy: Always
      pullSecretName: syngroup
    portal:
      baseUrl: 'portal.kubi.syngroup.loc'
      ldap: 
        enable: false
        host: ''
        username: ''
        password: ''
        baseDN: 'nexus.mmk.mmdom.net'
        userNameAttribute: ''
        firstNameAttribute: ''
        lastNameAttribute: ''
        emailAttribute: ''
        port: 636
        secureSocketLayer: true
        domain: 'mm'
        memberOf: 'memberOf'
        groupFilter: '(cn=G_$*)'
      
    mariadb:
      rootUser:
        password: "Root#123"
      db:
        user: "portal_user"
        password: "portal_password"
        name: portal
        
logstash:
    image:
      repository: docker.elastic.co/logstash/logstash-oss
      tag: 7.6.2

    service:
      ports:
        beats:
          port: 5044
          targetPort: beats
          protocol: TCP
        
    ports:
      - name: beats
        containerPort: 5044
        protocol: TCP

    inputs:
      main: |-
        input {
          beats {
            port => 5044
          }
        }

    outputs:
      main: |-
        output {
          elasticsearch {
            hosts => ["10.128.29.10:9200","10.128.29.11:9200","10.128.29.12:9200","10.128.29.13:9200","10.128.29.14:9200","10.128.29.15:9200"]
            manage_template => false
            index => "zoo_app-prod-%{+YYYY.MM}"
            user => "zoo_indexer"
            password => "Ishie1zi4e"
          }
        }